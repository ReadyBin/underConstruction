<UserControl x:Class="Vishnu.WPF_UI.LogicalTaskTreeControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:ctrl="clr-namespace:NetEti.CustomControls;assembly=NetEti.CustomProgressBar"
             xmlns:zoom="clr-namespace:NetEti.CustomControls;assembly=NetEti.ZoomBox"
             xmlns:vm="clr-namespace:Vishnu.ViewModel;assembly=Vishnu.ViewModel"
             xmlns:int="clr-namespace:Vishnu.Interchange;assembly=Vishnu.Interchange"
             xmlns:convert="clr-namespace:Vishnu.WPF_UI.ValueConverter"
             xmlns:local="clr-namespace:Vishnu.WPF_UI"
             xmlns:behaviour="clr-namespace:Vishnu.WPF_UI.Behaviours"
             xmlns:attached="clr-namespace:Vishnu.WPF_UI.DependencyProperties"
             xmlns:diag="clr-namespace:System.Diagnostics;assembly=WindowsBase"
             mc:Ignorable="d"
             x:Name="LogicalTaskTreeControl1">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="Assets/LogicalTaskTreeControlStaticResourceDictionary.xaml" />
                <ResourceDictionary Source="Assets/LogicalTaskTreeControlResourceDictionary.xaml" />
                <ResourceDictionary Source="Assets/GlassButton.xaml"/>
            </ResourceDictionary.MergedDictionaries>
            <convert:NullableBoolToBrush x:Key="nullableBoolToBrush" />
            <convert:ChildOrientationToExpandDirection x:Key="childOrientationToExpandDirection" />
            <convert:VisualNodeWorkerStateToText x:Key="workersStateToText" />
            <convert:VisualNodeStateToBitmapImage x:Key="visualNodeStateToBitmapImage" />
            <convert:NotEmptyToTrue x:Key="notEmptyToTrue" />
            <convert:Path2UserControlBase x:Key="path2UserControlBase" />
            <x:Code>
                <![CDATA[
                                    private void ItemBorder_MouseDown(object sender, MouseButtonEventArgs e)
                                    {
                                        Console.WriteLine("border1_MouseDown");
                                        e.Handled = true; // Console.WriteLine("border1_MouseDown: setting e.Handled to true.");
                                    }
                                ]]>
            </x:Code>
            <HierarchicalDataTemplate
                        DataType="{x:Type vm:JobListViewModel}" 
                        ItemsSource="{Binding Children}"
                    >
                <ContentControl>
                    <ContentControl.Content>
                        <MultiBinding Converter="{StaticResource path2UserControlBase, diag:PresentationTraceSources.TraceLevel=High}">
                            <Binding Path="UserControlPath" FallbackValue="Design Mode" />
                            <Binding />
                            <Binding RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type local:LogicalTaskTreeControl}}" Path="Name" />
                        </MultiBinding>
                    </ContentControl.Content>
                </ContentControl>
            </HierarchicalDataTemplate>

            <HierarchicalDataTemplate
                        DataType="{x:Type vm:SnapshotViewModel}" 
                        ItemsSource="{Binding Children}"
                    >
                <ContentControl>
                    <ContentControl.Content>
                        <MultiBinding Converter="{StaticResource path2UserControlBase, diag:PresentationTraceSources.TraceLevel=High}">
                            <Binding Path="UserControlPath" FallbackValue="Design Mode" />
                            <Binding />
                            <Binding RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type local:LogicalTaskTreeControl}}" Path="Name" />
                        </MultiBinding>
                    </ContentControl.Content>
                </ContentControl>
            </HierarchicalDataTemplate>

            <HierarchicalDataTemplate 
                        DataType="{x:Type vm:NodeListViewModel}" 
                        ItemsSource="{Binding Children}"
                        >
                <ContentControl>
                    <ContentControl.Content>
                        <MultiBinding Converter="{StaticResource path2UserControlBase, diag:PresentationTraceSources.TraceLevel=High}">
                            <Binding Path="UserControlPath" FallbackValue="Design Mode" />
                            <Binding />
                            <Binding RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type local:LogicalTaskTreeControl}}" Path="Name" />
                        </MultiBinding>
                    </ContentControl.Content>
                </ContentControl>
            </HierarchicalDataTemplate>

            <DataTemplate DataType="{x:Type vm:VishnuViewModelBase}">
                <ContentControl>
                    <ContentControl.Content>
                        <MultiBinding Converter="{StaticResource path2UserControlBase, diag:PresentationTraceSources.TraceLevel=High}">
                            <Binding Path="UserControlPath" FallbackValue="Design Mode" />
                            <Binding />
                            <Binding RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type local:LogicalTaskTreeControl}}" Path="Name" />
                        </MultiBinding>
                    </ContentControl.Content>
                </ContentControl>
            </DataTemplate>
        </ResourceDictionary>
    </UserControl.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>
        <zoom:ZoomBox x:Name="ZoomBox1" Grid.Row="0" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto">
            <TreeView x:Name="TreeView1" ItemsSource="{Binding MainLogicalNodeView}" 
                      Background="{StaticResource PlaygroundColorBrush}"
                  VirtualizingStackPanel.IsVirtualizing="False"
                  VirtualizingStackPanel.VirtualizationMode="Standard">
                <TreeView.ItemContainerStyle>
                    <!-- 
                    Dieser Style bindet ein TreeViewItem an ein TreeViewItemViewModel. 
                    -->
                    <Style TargetType="{x:Type TreeViewItem}">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="TreeViewItem">
                                    <Grid Name="Playground" Margin="0,0,0,0" HorizontalAlignment="Left" VerticalAlignment="Top"
                                      Background="Transparent">
                                        <Grid.RowDefinitions>
                                            <!-- Eine Zeile enthält den kompletten Inhalt des TreeViewItems incl. möglicher Kinder,
                                             die andere Zeile ist leer -->
                                            <RowDefinition Height="Auto" />
                                            <!--RowDefinition Height="Auto" /-->
                                        </Grid.RowDefinitions>
                                        <Grid.ColumnDefinitions>
                                            <!-- Eine Spalte enthält den kompletten Inhalt des TreeViewItems incl. möglicher Kinder,
                                             die andere Spalte ist leer -->
                                            <ColumnDefinition Width="Auto" />
                                            <!--ColumnDefinition Width="Auto" /-->
                                        </Grid.ColumnDefinitions>
                                        <!--<Expander Name="Exp" Template="{StaticResource ExpanderStyleHeaderCentered}"
                                     !!! ACHTUNG: TemplateBinding 'optimiert' Mode=TwoWay weg, korrekte Lösung - siehe einen tiefer !!!
                                                      ExpandDirection="{Binding ChildOrientation, Converter={StaticResource childOrientationToExpandDirection}}"
                                                      IsExpanded="{TemplateBinding TreeViewItem.IsExpanded}"
                                                      behaviour:ExpanderBehaviour.ExpandedCommand="{Binding ExpandedEventCommand}"
                                                      behaviour:ExpanderBehaviour.CollapsedCommand="{Binding CollapsedEventCommand}"
                                              >-->
                                        <Expander Name="Exp" Template="{StaticResource ExpanderStyleHeaderCentered}"
                                                      ExpandDirection="{Binding ChildOrientation, Converter={StaticResource childOrientationToExpandDirection}}"
                                                      IsExpanded="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                                                      behaviour:ExpanderBehaviour.ExpandedCommand="{Binding ExpandedEventCommand}"
                                                      behaviour:ExpanderBehaviour.CollapsedCommand="{Binding CollapsedEventCommand}"
                                                      behaviour:ExpanderBehaviour.SizeChangedCommand="{Binding SizeChangedEventCommand}"
                                                      attached:AttachedPropertiesContainer.HasParent="{Binding HasParent}"
                                                      attached:AttachedPropertiesContainer.ParentChildOrientation="{Binding Parent.ChildOrientation, diag:PresentationTraceSources.TraceLevel=High}"
                                                      attached:AttachedPropertiesContainer.LastNotNullLogical="{Binding LastNotNullLogical, diag:PresentationTraceSources.TraceLevel=High}"
                                              >
                                            <Expander.Header>
                                                <!-- Der 'ContentPresenter' zeigt den Inhalt des TreeViewItems an. -->
                                                <ContentPresenter Name="Exp_Header"
                                                            ContentSource="Header"
                                                            HorizontalAlignment="Stretch"
                                                            VerticalAlignment="Center" />
                                            </Expander.Header>
                                            <!-- 'ItemsPresenter' zeigt die Kinder des TreeViewItems an. -->
                                            <StackPanel x:Name="stpItemsHost" IsItemsHost="True" Orientation="{Binding ChildOrientation}" />
                                            <!-- ItemsPresenter / -->
                                        </Expander>
                                    </Grid>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="TreeViewItem.HasItems" Value="False">
                                            <Setter Property="Tag" TargetName="Exp" Value="NoChilds" />
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}" />
                        <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
                        <Setter Property="FontWeight" Value="Normal" />
                    </Style>
                </TreeView.ItemContainerStyle>
            </TreeView>
        </zoom:ZoomBox>
        <Grid Grid.Row="1"
              VirtualizingStackPanel.VirtualizationMode="Standard"
              VirtualizingStackPanel.IsVirtualizing="True">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <Button Grid.Column="0" Name="btnRunLogicalTaskTree" IsDefault="True" Command="{Binding RunLogicalTaskTree, diag:PresentationTraceSources.TraceLevel=High}">Run</Button>
            <Button Grid.Column="1" Name="btnBreakLogicalTaskTree" Command="{Binding BreakLogicalTaskTree, diag:PresentationTraceSources.TraceLevel=High}">Break</Button>
        </Grid>
    </Grid>
</UserControl>
